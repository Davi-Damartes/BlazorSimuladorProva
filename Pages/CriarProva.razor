@page "/CriarProva"

@inject ProvaService Prova
@inject NavigationManager NavigationManager 

<PageTitle>Criar Prova</PageTitle>

@if (string.IsNullOrEmpty(Prova.ProvaInstancia.NomeProfessor))
{
    <MudPaper Style="@($"color:{Colors.Green.Accent2};margin-top: 20px;")"
          Height="100vh;" 
          Width="100%;">

    <MudContainer MaxWidth="MaxWidth.Large" Class="mud-theme-info; border-radius: 15px">

        <MudText Typo="Typo.h3" Color="Color.Info"
                 Class="d-flex align-center justify-center"
                     Style="font-family: FontConteudo;">
                Criar Prova
        </MudText>  
        
        <MudForm @ref="@form" @bind-IsValid="@success" @bind-Errors="@errors"> 

            <div class="mb-3">
                <MudTextField @bind-Value="ProvaClasse.NomeProfessor"
                              Class="Tamanho-label"
                              T="string" 
                              Required="true"
                              Style="font-size: 25px;"
                              Label="Nome Professor"
                              Validation="@(new StringLengthAttribute(80)
                              {ErrorMessage= "Máximo de 80 caracteres"})" 
                              RequiredError="Campo Obrigatório!" />
            </div>

            <div class="mb-3">
                <MudNumericField @bind-Value="ProvaClasse.QuantidadeAlunos"
                                Class="Tamanho-label"
                                T="int" 
                                Label="Quantidade Alunos"
                                Required="true"
                                Style="font-size: 25px;"
                                RequiredError="Campo Obrigatório!"
                                HelperText="Minímo 5 Máximo 30 Alunos!"
                                Validation="@(new RangeAttribute(5,30)
                                {ErrorMessage= "Valores entre 5 e 30 Disponíveis!"})"/>
            </div>

            <div class="mb-3">
                <MudNumericField @bind-Value="ProvaClasse.QuantidadePerguntas" Required="true"
                                 Class="Tamanho-label"
                                 Style="font-size: 25px;"
                                 T="int" 
                                 Label="Quantidade de Perguntas"                      
                                 HelperText="Minímo 1 Máximo 10 Perguntas!"
                                 RequiredError="Campo Obrigatório!"
                                 Validation="@(new RangeAttribute(1,10)
                                 {ErrorMessage= "Valores entre 1 e 10 Disponíveis!"})" />
            </div>

            <MudSelect T="ETipoProva" @bind-Value="ProvaClasse.TipoProva" 
                       Label="Selecione Matéria da Prova" AnchorOrigin="Origin.BottomCenter" 
                       Variant="Variant.Outlined" Clearable
                       IconSize="Size.Large"
                       Style="font-size: 900px;"
                       OpenIcon="@Icons.Material.Filled.MenuBook" 
                       FullWidth="true"
                       AdornmentColor="Color.Tertiary">

                        @foreach (ETipoProva tipo in Enum.GetValues(typeof(ETipoProva)))
                        {
                            <MudSelectItem Value="@(tipo)">@tipo</MudSelectItem>
                        }

            </MudSelect>
           
            <div class="d-flex mt-5">
                <MudCheckBox T="bool" Required="true"
                             Color="Color.Success"
                             RequiredError="Campo Obrigatório!" UnCheckedColor="Color.Success"
                             Label="Termos de Uso!" 
                             Style="font-size: 20px; margin-bottom: 8px; position: relative"/>                      
            </div>

                <div class=" d-flex justify-start flex-grow-1 gap-4">
                <MudButton Variant="Variant.Filled" Color="Color.Info" DisableElevation="true"
                            OnClick="@(()=>form.Validate())"
                            Style="border-radius: 10px;">
                        Validar Campos
                 </MudButton>

                <MudButton Variant="Variant.Filled" Color="Color.Warning"
                            OnClick="@(()=>form.ResetAsync())"
                            DisableElevation="true"
                            Style="border-radius: 10px;">
                            Limpar formulário
                </MudButton>

            </div>

            <div class="d-flex justify-end align-end;">
                <MudButton OnClick="@(()=> CadastrarProva())" Variant="Variant.Filled" 
                           Color="Color.Primary"
                           Disabled="@(!success)"
                           Style="font-size: 20px;">
                        Enviar Formulário                
                </MudButton>
            </div>
        </MudForm> 
    </MudContainer>
    </MudPaper>

}
else
{
        NavigationManager.NavigateTo("/CriarPerguntas"); 
}


@code{
    bool success;

    string[] errors = { };

    MudForm form = new MudForm();

    private MudTheme Theme = new MudTheme();

    public Prova ProvaClasse { get; set; } = new();

    public Pergunta Pergunta { get; set; } = new Pergunta();

    public string? perguntaAtual { get; set; }

    public string ErroMessage { get; set; } = string.Empty;


    private void CadastrarProva()
    {
        if(ProvaClasse != null)
        {
            Prova.ProvaInstancia = ProvaClasse;
            NavigationManager.NavigateTo("/CriarPerguntas");
        }
        else
        {
            ErroMessage = "Erro ao cadastra Prova!!!";
        }
    }

}
