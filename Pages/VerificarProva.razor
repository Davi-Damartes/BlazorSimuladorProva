@page "/VerificarProva"

@inject ProvaService ProvaFinal
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<PageTitle>Verificar Prova</PageTitle>

@if (ProvaFinal.ProvaInstancia.Perguntas.Count() == 0)
{
    <MudText Typo="Typo.h3"
             Class="d-flex align-center justify-center"
             Color="Color.Warning">
        Não há perguntas criadas!
    </MudText>

    <MudButton ButtonType="ButtonType.Button"
               Variant="Variant.Filled"
               Color="Color.Error"
               Size="Size.Small"
               Href="/CriarPerguntas"
               Class="d-flex align-center"
               Style="margin-top: 15px;">
        Clique Aqui para Adicionar Perguntas
    </MudButton>

}
else
{
    <div class="d-flex flex-grow-1 justify-content-center align-items-center" style="height: 100vh;">
        <MudContainer MaxWidth="MaxWidth.Medium">
            <MudPaper Elevation="25" Class="p-4" Style="width: 100%;">

                <MudText Class="mud-secondary-dark" Typo="Typo.h5">
                    Professor: <u>@ProvaFinal.ProvaInstancia.NomeProfessor</u>
                    Verifique as Pergunta para ver se tem algum erro!!!
                </MudText>
                @foreach (var pergunta in ListaPerguntas)
                {
                    <MudText Typo="Typo.h5" Class="mt-5 mud-secondary-text">
                        (@contador)) @pergunta.EnunciadoDaPergunta
                    </MudText>

                    @foreach (var questao in pergunta.Questoes)
                    {

                        @foreach (var alternativa in questao.ListaAlternativas)
                        {
                            <MudText Typo="Typo.h5" Class="mud-secondary-text" Style="margin-bottom: 20px;">
                                @alternativa.OpcaoAlternativa.ToString()) @alternativa.TextoDasAlternativa
                            </MudText>
                        }
                       <br />
                       <br />
                    }
                }

                <div class="d-flex justify-content-center">
                    <MudButton OnClick="ConfirmarEnvio"
                               ButtonType="ButtonType.Button"
                               Variant="Variant.Filled"
                               Color="Color.Success"
                               Size="Size.Large"
                               Style="margin-top: 15px; margin-bottom: 60px;">
                        Clique Aqui para Confirmar o envio da Prova!!!
                    </MudButton>
                </div>
            </MudPaper>
        </MudContainer>
    </div>
}


@code {

    private int contador = 1;

    public Pergunta PerguntaAtual { get; set; } = new();

    public List<Pergunta> ListaPerguntas { get; set; } = new();

    public bool ProvaConfirmada = false;


    protected override void OnInitialized( )
    {
        ListaPerguntas = ProvaFinal.ProvaInstancia.Perguntas;
    }

    public void ConfirmarEnvio( )
    {
        var options = new DialogOptions
            {
                CloseOnEscapeKey = true,

            };

        var parameters = new DialogParameters<DialogConfirmarProva>
        {
            { x => x.Titulo,  "Verificação do Envio da Prova !!!"},

            { x => x.Conteudo, "Você tem certeza? Essa ação não pode ser defeita!" },

            { x => x.Color, Color.Success }

        };

        DialogService.Show<DialogConfirmarProva>("ConfirmarProva", parameters, options);

    }


}


