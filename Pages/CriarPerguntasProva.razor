@page "/"

@inject QuestaoService QuestaoServices

@inject ProvaService Prova

@if (mostrarAlert)
{
    <MudAlert Severity="Severity.Error"
              ContentAlignment="HorizontalAlignment.Center"
              ShowCloseIcon="true" CloseIconClicked="(() => CloseMe(false))">
        @Erros
    </MudAlert>
}

<MudPaper Height="100%" Width="100%">
    <MudContainer MaxWidth="MaxWidth.Large">

        <MudText Class="mt-5 d-flex align-center justify-center" Typo="Typo.h5">
            Prova de @Prova.ProvaInstancia.TipoProva.ToString().Replace("_", " ")         
        </MudText>

        <div class="mb-5">
            <MudText Class="mt-5 mud-spacing-md pd-4">
                <b>Digite o Enunciado da Questão</b>
            </MudText>
            <MudForm @ref="@form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudTextField @bind-Value="@Questao.EnunciadoQuestao"
                              Lines="2"
                              T="string"
                              Required="true"
                              RequiredError="Campo Obrigatorio"
                              Label="Enunciado da Questão"
                              Variant="Variant.Text" />
            </MudForm>
        </div>


        <div class="mb-3 mt-5">
            <MudForm @ref="@form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudGrid>
                    <MudItem xs="12" Class="mud-elevation-4 mud-spacing">
                        <MudTextField @bind-Value="AlternativaModel1!.TextoDasAlternativa"
                                      Required="true"
                                      RequiredError="Campo Obrigatório"
                                      Lines="3"
                                      Label="Alternativa 1"
                                      InputType="InputType.Text"
                                      Variant="Variant.Text" />
       
                     </MudItem>
                       <MudItem xs="3">
                            <div class="mt-1 mb-4">
                                <MudButton OnClick="(() => AdicionarPerguntas(AlternativaModel1))"
                                           Variant="Variant.Filled"
                                           Color="Color.Success"
                                           Disabled="@disableQuestoes">
                                    Adicionar Pergunta 1
                                </MudButton>
                            </div>
                    </MudItem>
                </MudGrid>
            </MudForm>
        </div>


        <div class="mb-3">
            <MudForm @ref="@form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudGrid>
                    <MudItem xs="12" Class="mud-elevation-4 mud-spacing">
                        <MudTextField @bind-Value="AlternativaModel2!.TextoDasAlternativa"
                                      Required="true"
                                      RequiredError="Campo Obrigatório"
                                      Lines="3"
                                      Variant="Variant.Text"
                                      Label="Alternativa 2"
                                      InputType="InputType.Text"
                                      />
                    </MudItem>          
                       <MudItem xs="3">
                        <div class="mt-5 mb-4">
                            <MudButton OnClick="(() => AdicionarPerguntas(AlternativaModel2))"
                                       Variant="Variant.Filled"
                                       Color="Color.Success"
                                       Disabled="@disableQuestoes">
                                Adicionar Pergunta 2
                            </MudButton>
                        </div>
                    </MudItem>
                </MudGrid>
            </MudForm>
        </div>

        <div class="mb-3">
            <MudForm @ref="@form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudGrid>
                    <MudItem xs="12" Class="mud-elevation-4 mud-spacing">
                        <MudPaper>
                            <MudTextField @bind-Value="AlternativaModel3!.TextoDasAlternativa"
                                          Required="true"
                                          RequiredError="Campo Obrigatório"
                                          Lines="3"
                                          Label="Alternativa 3"
                                          Variant="Variant.Text"
                                          InputType="InputType.Text" />
                        </MudPaper>
                    </MudItem>
                         <MudItem xs="3">
                                <div class="mt-5 mb-4">
                                    <MudButton OnClick="(() => AdicionarPerguntas(AlternativaModel3))"
                                               Variant="Variant.Filled"
                                               Color="Color.Success"
                                               Disabled="@disableQuestoes">
                                        Adicionar Pergunta 3
                                    </MudButton>
                                </div>
                        </MudItem>
                </MudGrid>
            </MudForm>
        </div>

        <div class="mb-3">
            <MudForm @ref="@form" @bind-IsValid="@success" @bind-Errors="@errors">

                <MudGrid>
                    <MudItem xs="12" Class="mud-elevation-4 mud-spacing">
                        <MudPaper>
                            <MudTextField @bind-Value="AlternativaModel4!.TextoDasAlternativa"
                                          Required="true"
                                          RequiredError="Campo Obrigatório"
                                          Lines="3"
                                          Label="Alternativa 4"
                                          Variant="Variant.Text"
                                          InputType="InputType.Text" />
                        </MudPaper>
                    </MudItem>
                          <MudItem xs="12">
                                <div class="mt-5 mb-4">
                                    <MudButton OnClick="(() => AdicionarPerguntas(AlternativaModel4))"
                                               Variant="Variant.Filled"
                                               Color="Color.Success"
                                               Disabled="@disableQuestoes">
                                        Adicionar Pergunta 4
                                    </MudButton>
                                </div>
                        </MudItem>
                </MudGrid>
            </MudForm>
        </div>



        <div class="mt-5 d-flex align-center justify-center">
            <MudButton OnClick="(()=> AddQuestao())"
                       ButtonType="ButtonType.Submit"
                       Variant="Variant.Filled"
                       Color="Color.Success"
                       Disabled="@BotaoAddQuestaoDisable">
                Adicionar Questão
            </MudButton>
        </div>


    </MudContainer>
</MudPaper>




@code {
    bool success;

    string[ ] errors = { };


    MudForm form = new MudForm();

    bool IsCorretaAlternativa;

    bool BotaoAddQuestaoDisable = true;

    bool disableQuestoes = false;


    public Pergunta Pergunta { get; set; } = new();

    public Questao Questao { get; set; } = new();

    public List<Questao> ListaQuestoes { get; set; } = new List<Questao>();

    public Alternativa? AlternativaModel1 { get; set; } = new Alternativa();

    public Alternativa AlternativaModel2 { get; set; } = new();

    public Alternativa AlternativaModel3 { get; set; } = new();

    public Alternativa AlternativaModel4 { get; set; } = new();

    public List<Alternativa> ListaAlternativas { get; set; } = new();



    public string? Erros { get; set; } = string.Empty;
    private bool mostrarAlert = false;
    private bool fecharAlert = false;



    private void AdicionarPerguntas(Alternativa alternativa)
    {
        if (!string.IsNullOrWhiteSpace(alternativa.TextoDasAlternativa))
        {
            AddAlternativa(alternativa);
        }
        else
        {
            Erros = $"Campo inválido, erro ao adicionar Pergunta {alternativa.TextoDasAlternativa}";
            ShowAlerts();
        }
    }


    private void AddAlternativa(Alternativa alternativaModel)
    {
        if (ListaAlternativas.Count < 4)
        {
            ListaAlternativas.Add(alternativaModel);
            BotaoAddQuestaoDisable = false;
        }

        if (ListaAlternativas.Count == 4)
        {
            disableQuestoes = true;

        }

    }

    private void AddQuestao( )
    {
        if (ListaAlternativas.Count() > 0)
        {
            Questao.ListaAlternativas.AddRange(ListaAlternativas);
            QuestaoServices.QuestaoInstancia.ListaAlternativas.AddRange(ListaAlternativas);

            ListaQuestoes.Add(Questao);
        }
        else
        {
            Erros = "Erros ao adicionar Questão";
            ShowAlerts();
        }


    }

    private void CloseMe(bool value)
    {
        if (value)
        {
            fecharAlert = false;
        }
        else
        {
            mostrarAlert = false;
        }
    }
    private void ShowAlerts( )
    {
        mostrarAlert = true;
        fecharAlert = true;
    }

}
