@page "/CriacaoPerguntas"

@if (mostrarAlert)
{
<MudAlert Severity="Severity.Error" 
    ContentAlignment="HorizontalAlignment.Center" 
    ShowCloseIcon="true" CloseIconClicked="(() => CloseMe(false))">
    @Erros
</MudAlert>
}

<MudPaper Height="100vh" Width="100%">
    <MudContainer MaxWidth="MaxWidth.Medium">

        <EditForm Model="@Alternativa" OnValidSubmit="AdicionarPerguntas">
            <DataAnnotationsValidator />
            <ValidationSummary/>

            <MudTextField @bind-Text="Questao.EnunciadoQuestao"
                          Required="true"
                          T="string"
                          Label="Enunciado da questão"
                          InputType="InputType.Text" />

            <MudTextField @bind-Value="perguntaAtual"
                          For="(() => perguntaAtual)"
                          Required="true"
                          T="string"
                          Label="Alternativa"
                          InputType="InputType.Text" 
                          Disabled="@disableQuestoes" />

            <div class="mt-5">
                <MudButton ButtonType="ButtonType.Submit"
                           Variant="Variant.Filled"
                           Color="Color.Secondary"
                           Disabled="@disableQuestoes">
                    Adicionar Pergunta
                </MudButton>
            </div>

        </EditForm>

        <div class="mt-5">
            <MudButton OnClick="(()=> AddQuestao())"
                       ButtonType="ButtonType.Submit"
                       Variant="Variant.Filled"
                       Color="Color.Success">
                Adicionar Questão
            </MudButton>
        </div>

         <MudItem xs="12" md="6">
            <MudText Typo="Typo.h6" GutterBottom="true">Altenativas da Pergunta</MudText>
            <MudPaper Width="100%">
                <MudList>
                    @foreach(var alternativa in ListaAlternativas)
                    {
                        <MudText>Pergunta </MudText>
                        <MudListItem Text="@alternativa.TextoDasAlternativa" />                  
                    }
                </MudList>
            </MudPaper>
        </MudItem> 
    </MudContainer>
</MudPaper>
}



@code {
    MudForm form = new MudForm();

    bool IsCorretaAlternativa;

    bool disableQuestoes = false;

    [Parameter]
    public Prova Prova { get; set; } = new();

    public Pergunta Pergunta { get; set; } = new();

    public Questao Questao { get; set; } = new();

    public Alternativa Alternativa { get; set; } = new Alternativa();

    public List<Alternativa> ListaAlternativas { get; set; } = new List<Alternativa>();

    public string? perguntaAtual { get; set; } = string.Empty;

    public string? Erros { get; set; } = string.Empty;

    public List<string>? perguntasAtuais { get; set; } = new List<string>();

    private bool mostrarAlert = false;
    private bool fecharAlert = false;

    private void CloseMe(bool value)
    {
        if (value)
        {
            fecharAlert = false;
        }
        else
        {
            mostrarAlert = false;
        }
    }
    private void ShowAlerts( )
    {
        mostrarAlert = true;
        fecharAlert = true;
    }

    private void AdicionarPerguntas()
    {
        if (!string.IsNullOrWhiteSpace(perguntaAtual))
        {
            AddAlternativa(perguntaAtual, IsCorretaAlternativa);

        }
        else
        {
            Erros = "Erros ao adicionar Pergunta";
            ShowAlerts();
        }
    }


    private void AddAlternativa(string alternativaTexto, bool IsCorreta)
    {
        if (ListaAlternativas.Count != 4)
        {
            var alternativa = new Alternativa 
            { 
                TextoDasAlternativa = alternativaTexto,
                IsCorreta = IsCorreta 
            };
            ListaAlternativas.Add(alternativa);

            perguntaAtual = string.Empty;
        }

        if (ListaAlternativas.Count == 4)
        {
            disableQuestoes = true;

        }

    }

    private void AddQuestao()
    {
        if (ListaAlternativas.Count() > 1 
                        && 
        ListaAlternativas.Count() <= Prova.QuantidadePerguntas)
        {        
            Questao.AlternativasQuestao.AddRange(ListaAlternativas);
        }
        else
        {
            Erros = "Erros ao adicionar Questão";
            ShowAlerts();
        }


    }
}